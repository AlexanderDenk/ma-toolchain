
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '513563E94E29A78A7FA6A9ED95C3456D'
    
_lr_action_items = {'ASSIGNOP':([5,39,],[8,42,]),'CONST':([7,8,13,14,24,25,26,27,28,40,41,],[12,12,12,12,12,12,12,12,12,12,12,]),'RPAREN':([11,12,21,22,31,33,34,35,36,37,43,44,46,47,48,],[-15,-16,-6,31,-5,-7,-10,-8,-11,-9,46,47,-12,-13,-14,]),'XOROP':([11,12,16,18,21,22,31,33,34,35,36,37,43,44,46,47,48,],[-15,-16,28,28,-6,28,-5,-7,28,-8,28,-9,28,28,-12,-13,-14,]),'ANDOP':([11,12,16,18,21,22,31,33,34,35,36,37,43,44,46,47,48,],[-15,-16,24,24,-6,24,-5,-7,24,24,24,24,24,24,-12,-13,-14,]),'NOTOP':([7,8,13,14,24,25,26,27,28,40,41,],[13,13,13,13,13,13,13,13,13,13,13,]),'LBRAC':([11,],[20,]),'IMPLIESOP':([11,12,16,18,21,22,31,33,34,35,36,37,43,44,46,47,48,],[-15,-16,25,25,-6,25,-5,-7,25,-8,25,-9,25,25,-12,-13,-14,]),'COLON':([2,4,9,19,30,],[6,7,-19,-18,39,]),'RBRAC':([9,19,45,],[-19,-18,48,]),'OROP':([11,12,16,18,21,22,31,33,34,35,36,37,43,44,46,47,48,],[-15,-16,26,26,-6,26,-5,-7,26,-8,26,26,26,26,-12,-13,-14,]),'VARORDER':([0,],[2,]),'MAINEXP':([0,],[4,]),'LPAREN':([7,8,13,14,24,25,26,27,28,32,38,40,41,],[14,14,14,14,14,14,14,14,14,40,41,14,14,]),'EXISTS':([7,8,13,14,24,25,26,27,28,40,41,],[15,15,15,15,15,15,15,15,15,15,15,]),'DOT':([9,19,23,29,],[-19,-18,32,38,]),'EQOP':([11,12,16,18,21,22,31,33,34,35,36,37,43,44,46,47,48,],[-15,-16,27,27,-6,27,-5,-7,-10,-8,27,-9,27,27,-12,-13,-14,]),'EXISTS_EXCL':([7,8,13,14,24,25,26,27,28,40,41,],[17,17,17,17,17,17,17,17,17,17,17,]),'$end':([0,1,3,9,10,11,12,16,18,19,21,31,33,34,35,36,37,46,47,48,],[-17,0,-4,-19,-1,-15,-16,-3,-2,-18,-6,-5,-7,-10,-8,-11,-9,-12,-13,-14,]),'VARIABLE':([0,6,7,8,9,13,14,15,17,20,24,25,26,27,28,40,41,42,],[5,9,11,11,9,11,11,23,9,9,11,11,11,11,11,11,11,9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'expression':([7,8,13,14,24,25,26,27,28,40,41,],[16,18,21,22,33,34,35,36,37,43,44,]),'variableList':([6,9,17,20,42,],[10,19,29,30,45,]),'empty':([0,],[3,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> VARORDER COLON variableList','start',3,'p_start','PyBool_std_parse.py',109),
  ('start -> VARIABLE ASSIGNOP expression','start',3,'p_start','PyBool_std_parse.py',110),
  ('start -> MAINEXP COLON expression','start',3,'p_start','PyBool_std_parse.py',111),
  ('start -> empty','start',1,'p_start','PyBool_std_parse.py',112),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','PyBool_std_parse.py',138),
  ('expression -> NOTOP expression','expression',2,'p_expression_not','PyBool_std_parse.py',142),
  ('expression -> expression ANDOP expression','expression',3,'p_expression_and','PyBool_std_parse.py',146),
  ('expression -> expression OROP expression','expression',3,'p_expression_or','PyBool_std_parse.py',150),
  ('expression -> expression XOROP expression','expression',3,'p_expression_xor','PyBool_std_parse.py',154),
  ('expression -> expression IMPLIESOP expression','expression',3,'p_expression_impl','PyBool_std_parse.py',158),
  ('expression -> expression EQOP expression','expression',3,'p_expression_eqv','PyBool_std_parse.py',162),
  ('expression -> EXISTS VARIABLE DOT LPAREN expression RPAREN','expression',6,'p_expression_exists','PyBool_std_parse.py',166),
  ('expression -> EXISTS_EXCL variableList DOT LPAREN expression RPAREN','expression',6,'p_expression_exists_excl','PyBool_std_parse.py',171),
  ('expression -> VARIABLE LBRAC variableList COLON ASSIGNOP variableList RBRAC','expression',7,'p_expression_rename','PyBool_std_parse.py',176),
  ('expression -> VARIABLE','expression',1,'p_expression_var','PyBool_std_parse.py',188),
  ('expression -> CONST','expression',1,'p_expression_const','PyBool_std_parse.py',204),
  ('empty -> <empty>','empty',0,'p_empty','PyBool_std_parse.py',212),
  ('variableList -> VARIABLE variableList','variableList',2,'p_variableList','PyBool_std_parse.py',218),
  ('variableList -> VARIABLE','variableList',1,'p_variableList','PyBool_std_parse.py',219),
]
